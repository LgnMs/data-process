//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use schemars::JsonSchema;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, JsonSchema)]
#[sea_orm(table_name = "collect_log")]
pub struct Model {
    #[sea_orm(primary_key)]
    #[serde(skip_deserializing)]
    pub id: i32,
    pub running_log: Option<String>,
    pub collect_config_id: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::collect_config::Entity",
        from = "Column::CollectConfigId",
        to = "super::collect_config::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    CollectConfig,
}

impl Related<super::collect_config::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CollectConfig.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
