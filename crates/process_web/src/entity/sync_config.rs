//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use ts_rs::TS;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, TS, Default)]
#[sea_orm(table_name = "sync_config")]
#[ts(
    export,
    export_to = "ui/api/models/auto-generates/SyncConfig.ts",
    rename = "SyncConfig"
)]
pub struct Model {
    #[sea_orm(primary_key)]
    #[serde(skip_deserializing)]
    pub id: i32,
    pub name: String,
    #[ts(type = "any")]
    pub data_source: Json,
    pub source_table_name: String,
    #[ts(type = "any")]
    pub source_table_columns: Json,
    pub query_sql: String,
    #[ts(type = "any")]
    pub target_data_source: Json,
    #[ts(type = "any")]
    pub target_table_name: String,
    #[ts(type = "any")]
    pub target_query_sql_template: String,
    pub cron: Option<String>,
    pub job_id: Option<Uuid>,
    #[serde(skip_deserializing)]
    pub del_flag: i32,
    #[serde(skip_deserializing)]
    pub update_time: DateTime,
    #[serde(skip_deserializing)]
    pub create_time: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
